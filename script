local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local humanoid = character:WaitForChild("Humanoid")
local runService = game:GetService("RunService")
local userInput = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")

local autoFarm = false
local HIT_RANGE = 10
local orbitRadius = 10
local orbitAngle = 0
local heightOffset = 2.5
local saveFilePath = "settings.txt"

local gui = nil
local mainFrame = nil
local closeButton = nil

local createGui
local makeDraggable
local loadSettings
local saveSettings

loadSettings = function()
    local success, data = pcall(function()
        return game:GetService("HttpService"):JSONDecode(readfile(saveFilePath))
    end)
    if success then
        return data
    else
        return {}
    end
end

saveSettings = function(settings)
    pcall(function()
        writefile(saveFilePath, game:GetService("HttpService"):JSONEncode(settings))
    end)
end

makeDraggable = function(object)
    local UserInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        object.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    object.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = object.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    object.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

local function getClosestMob()
    local closestMob = nil
    local closestDistance = math.huge
    for _, mob in ipairs(workspace.Characters:GetChildren()) do
        if mob:IsA("Model") and mob ~= character and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
            local dist = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
            if dist < closestDistance then
                closestDistance = dist
                closestMob = mob
            end
        end
    end
    return closestMob
end

local function isInRange(mob, range)
    local mobRootPart = mob:FindFirstChild("HumanoidRootPart")
    if not mobRootPart or not humanoidRootPart then return false end
    return (mobRootPart.Position - humanoidRootPart.Position).Magnitude <= range
end

local function equipWeapon()
    local args = {
        [1] = "Equip/UnEquip"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("WeaponsEvent"):FireServer(unpack(args))
end

local function useSkill(skillName, targetPos)
    local args = {
        [1] = { ["Skill"] = skillName, ["Function"] = "Activate" },
        [2] = targetPos,
        [3] = true
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Skill"):FireServer(unpack(args))
end

local function attackEnemy(mob)
    if mob and mob:FindFirstChild("HumanoidRootPart") then
        local args = { [1] = "Attack" }
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Combat"):FireServer(unpack(args))
        
        task.wait(0.1)
        
        local alternateArgs = {
            [1] = mob,
            [2] = mob.HumanoidRootPart.Position
        }
        
        pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Combat"):FireServer("Attack", unpack(alternateArgs))
        end)
    end
end

local function teleportToMob(mob)
    if mob and mob:FindFirstChild("HumanoidRootPart") then
        humanoidRootPart.Anchored = false
        
        orbitAngle = orbitAngle + 10
        if orbitAngle >= 360 then orbitAngle = 0 end
        
        local angle = math.rad(orbitAngle)
        local x = math.cos(angle) * orbitRadius
        local z = math.sin(angle) * orbitRadius
        
        local mobPosition = mob.HumanoidRootPart.Position
        local targetPosition = mobPosition + Vector3.new(x, heightOffset, z)
        
        local tweenInfo = TweenInfo.new(0.15, Enum.EasingStyle.Linear)
        local tween = tweenService:Create(humanoidRootPart, tweenInfo, {CFrame = CFrame.new(targetPosition, mobPosition)})
        tween:Play()
        tween.Completed:Wait()
        
        humanoidRootPart.CFrame = CFrame.new(targetPosition, mobPosition + Vector3.new(0, 1, 0))
        humanoidRootPart.Anchored = true
        
        return true
    end
    return false
end

local function attackLoop()
    while autoFarm do
        local mob = getClosestMob()
        if teleportToMob(mob) then
            attackEnemy(mob)
            
            local healthPercent = humanoid.Health / humanoid.MaxHealth * 100
            if healthPercent <= 40 then
                useSkill("FlurryOfBlows", mob.HumanoidRootPart.Position)
            end
            if healthPercent <= 35 then
                useSkill("BloodyCut", mob.HumanoidRootPart.Position)
            end
            if healthPercent <= 30 then
                useSkill("Invisibility", mob.HumanoidRootPart.Position)
            end
            
            task.wait(0.1)
        else
            task.wait(0.5)
        end
    end
end

local orbitConnection
local function startOrbiting()
    if orbitConnection then orbitConnection:Disconnect() end
    
    orbitConnection = runService.Heartbeat:Connect(function()
        local mob = getClosestMob()
        if mob and mob:FindFirstChild("HumanoidRootPart") and autoFarm then
            teleportToMob(mob)
        end
    end)
end

local function stopAutoFarm()
    autoFarm = false
    humanoidRootPart.Anchored = false
    if orbitConnection then orbitConnection:Disconnect() end
end

local abilityActive = false
local abilityLoop = nil
local function toggleAbility(isEnabled)
    abilityActive = isEnabled
    if isEnabled then
        if not abilityLoop then
            abilityLoop = spawn(function()
                while abilityActive do
                    local mob = getClosestMob()
                    if mob and mob:FindFirstChild("HumanoidRootPart") then
                        local healthPercent = humanoid.Health / humanoid.MaxHealth * 100
                        local targetPos = mob.HumanoidRootPart.Position
                        
                        if healthPercent <= 40 then
                            useSkill("FlurryOfBlows", targetPos)
                        end
                        if healthPercent <= 35 then
                            useSkill("BloodyCut", targetPos)
                        end
                        if healthPercent <= 30 then
                            useSkill("Invisibility", targetPos)
                        end
                    end
                    task.wait(1)
                end
            end)
        end
    else
        abilityActive = false
        abilityLoop = nil
    end
end

createGui = function()
    if gui then 
        gui:Destroy() 
    end
    
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local CloseButton = Instance.new("TextButton")
    local ButtonContainer = Instance.new("Frame")
    local HeaderLabel = Instance.new("TextLabel")
    
    ScreenGui.Name = "AutoFarmGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.DisplayOrder = 999999999
    ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
    
    CloseButton.Size = UDim2.new(0, 150, 0, 45)
    CloseButton.Position = UDim2.new(0.5, -75, 0, -40)
    CloseButton.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    CloseButton.BackgroundTransparency = 0.2
    CloseButton.Text = "Open/Close"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 16
    CloseButton.Parent = ScreenGui
    CloseButton.ZIndex = 10
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0.2, 0)
    closeCorner.Parent = CloseButton
    
    local closeStroke = Instance.new("UIStroke")
    closeStroke.Color = Color3.fromRGB(100, 100, 255)
    closeStroke.Transparency = 0.3
    closeStroke.Thickness = 2
    closeStroke.Parent = CloseButton
    
    MainFrame.Size = UDim2.new(0.25, 0, 0.5, 0)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
    MainFrame.BackgroundTransparency = 0.1
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Visible = true
    MainFrame.ZIndex = 1
    MainFrame.Parent = ScreenGui
    
    local mainFrameCorner = Instance.new("UICorner")
    mainFrameCorner.CornerRadius = UDim.new(0.03, 0)
    mainFrameCorner.Parent = MainFrame
    
    local mainFrameStroke = Instance.new("UIStroke")
    mainFrameStroke.Color = Color3.fromRGB(100, 100, 255)
    mainFrameStroke.Transparency = 0.3
    mainFrameStroke.Thickness = 2
    mainFrameStroke.Parent = MainFrame
    
    HeaderLabel.Size = UDim2.new(1, 0, 0.1, 0)
    HeaderLabel.Position = UDim2.new(0, 0, 0, 0)
    HeaderLabel.BackgroundTransparency = 1
    HeaderLabel.Text = "Auto Farm Script"
    HeaderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    HeaderLabel.Font = Enum.Font.GothamBold
    HeaderLabel.TextSize = 24
    HeaderLabel.ZIndex = 3
    HeaderLabel.Parent = MainFrame
    
    ButtonContainer.Size = UDim2.new(0.9, 0, 0.85, 0)
    ButtonContainer.Position = UDim2.new(0.5, 0, 0.55, 0)
    ButtonContainer.AnchorPoint = Vector2.new(0.5, 0.5)
    ButtonContainer.BackgroundTransparency = 1
    ButtonContainer.Parent = MainFrame
    
    local UIGridLayout = Instance.new("UIGridLayout")
    UIGridLayout.Parent = ButtonContainer
    UIGridLayout.CellSize = UDim2.new(0.9, 0, 0.16, 0)
    UIGridLayout.CellPadding = UDim2.new(0, 0, 0, 10)
    UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Center
    
    makeDraggable(CloseButton)
    makeDraggable(MainFrame)
    
    local savedSettings = loadSettings()
    
    local function createToggleButton(number, name, onClick)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 1, 0)
        button.BackgroundTransparency = 0.1
        button.BackgroundColor3 = Color3.fromRGB(45, 45, 65)
        button.Text = name
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.Font = Enum.Font.GothamBold
        button.TextSize = 16
        button.LayoutOrder = number
        button.Parent = ButtonContainer
        button.ZIndex = 2
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0.2, 0)
        corner.Parent = button
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(100, 100, 255)
        stroke.Transparency = 0.7
        stroke.Thickness = 2
        stroke.Parent = button
        
        local gradient = Instance.new("UIGradient")
        gradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 55))
        })
        gradient.Rotation = 90
        gradient.Parent = button
        
        local isEnabled = savedSettings[name] or false
        
        local function updateButtonAppearance()
            if isEnabled then
                gradient.Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(80, 80, 200)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 60, 180))
                })
                stroke.Transparency = 0.3
            else
                gradient.Color = ColorSequence.new({
                    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 65)),
                    ColorSequenceKeypoint.new(1, Color3.fromRGB(35, 35, 55))
                })
                stroke.Transparency = 0.7
            end
        end
        
        updateButtonAppearance()
        
        if isEnabled then
            onClick(true)
        end
        
        button.MouseButton1Click:Connect(function()
            isEnabled = not isEnabled
            updateButtonAppearance()
            onClick(isEnabled)
            savedSettings[name] = isEnabled
            saveSettings(savedSettings)
        end)
    end
    
    createToggleButton(1, "Auto Farm", function(enabled) 
        autoFarm = enabled
        if enabled then
            equipWeapon()
            startOrbiting()
            spawn(attackLoop)
        else
            stopAutoFarm()
        end
    end)
    
    createToggleButton(2, "Auto Attack", function(enabled) 
        if enabled then
            spawn(function()
                while enabled do
                    local mob = getClosestMob()
                    attackEnemy(mob)
                    task.wait(0.1)
                end
            end)
        end
    end)
    
    createToggleButton(3, "Auto Ability", toggleAbility)
    
    createToggleButton(4, "Weapon Equip", function(enabled)
        if enabled then
            equipWeapon()
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = not MainFrame.Visible
    end)
    
    gui = ScreenGui
    mainFrame = MainFrame
    closeButton = CloseButton
    
    return ScreenGui, MainFrame, CloseButton
end

createGui()

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
    
    if autoFarm then
        startOrbiting()
        spawn(attackLoop)
    end
end)
