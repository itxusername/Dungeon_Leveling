local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local userInput = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")

local autoFarm = false
local HIT_RANGE = 10
local orbitRadius = 10
local orbitAngle = 0
local heightOffset = 2.5
local saveFilePath = "settings.txt"

local gui = nil
local mainFrame = nil
local closeButton = nil

local createGui
local makeDraggable
local loadSettings
local saveSettings

loadSettings = function()
    local success, data = pcall(function()
        return game:GetService("HttpService"):JSONDecode(readfile(saveFilePath))
    end)
    if success then
        return data
    else
        return {}
    end
end

saveSettings = function(settings)
    pcall(function()
        writefile(saveFilePath, game:GetService("HttpService"):JSONEncode(settings))
    end)
end

makeDraggable = function(object)
    local UserInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        object.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    object.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = object.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    object.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

local function getClosestMob()
    local closestMob = nil
    local closestDistance = math.huge
    for _, mob in ipairs(workspace.Characters:GetChildren()) do
        if mob:IsA("Model") and mob ~= character and mob:FindFirstChild("HumanoidRootPart") and mob:FindFirstChild("Humanoid") and mob.Humanoid.Health > 0 then
            local dist = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
            if dist < closestDistance then
                closestDistance = dist
                closestMob = mob
            end
        end
    end
    return closestMob
end

local function isInRange(mob, range)
    local mobRootPart = mob:FindFirstChild("HumanoidRootPart")
    if not mobRootPart or not humanoidRootPart then return false end
    return (mobRootPart.Position - humanoidRootPart.Position).Magnitude <= range
end

local function equipWeapon()
    local args = {
        [1] = "Equip/UnEquip"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("WeaponsEvent"):FireServer(unpack(args))
end

local function useSkill(skillName)
    local mob = getClosestMob()
    if not mob or not mob:FindFirstChild("HumanoidRootPart") then return end
    
    local targetPosition = mob.HumanoidRootPart.Position
    
    local args = {
        [1] = { ["Skill"] = skillName, ["Function"] = "Activate" },
        [2] = targetPosition,
        [3] = true
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Skill"):FireServer(unpack(args))
end

local function attackEnemy()
    local mob = getClosestMob()
    if mob and mob:FindFirstChild("HumanoidRootPart") then
        local mobRoot = mob.HumanoidRootPart
        
        local lookAtPosition = mobRoot.Position
        humanoidRootPart.CFrame = CFrame.lookAt(humanoidRootPart.Position, lookAtPosition)
        
        game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Combat"):FireServer("Attack")
        
        local targetParts = {"HumanoidRootPart", "Torso", "UpperTorso", "Head"}
        for _, partName in ipairs(targetParts) do
            local targetPart = mob:FindFirstChild(partName)
            if targetPart then
                local args = {
                    [1] = "Attack",
                    [2] = mob,
                    [3] = targetPart.Position
                }
                game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Combat"):FireServer(unpack(args))
                break
            end
        end
    end
end

local function attackLoop()
    while autoFarm do
        local mob = getClosestMob()
        if mob and mob:FindFirstChild("HumanoidRootPart") then
            humanoidRootPart.Anchored = false
            
            orbitAngle = orbitAngle + 10
            if orbitAngle >= 360 then orbitAngle = 0 end
            
            local angle = math.rad(orbitAngle)
            local x = math.cos(angle) * orbitRadius
            local z = math.sin(angle) * orbitRadius
            
            local mobPosition = mob.HumanoidRootPart.Position
            local targetPosition = mobPosition + Vector3.new(x, heightOffset, z)
            
            local lookAtPosition = mobPosition
            humanoidRootPart.CFrame = CFrame.new(targetPosition, lookAtPosition)
            
            humanoidRootPart.Anchored = true
            
            attackEnemy()
            
            useSkill("FlurryOfBlows")
            useSkill("BloodyCut")
            useSkill("Invisibility")
            
            task.wait(0.1)
        else
            task.wait(0.5)
        end
    end
end

local orbitConnection
local function startOrbiting()
    if orbitConnection then orbitConnection:Disconnect() end
    
    orbitConnection = runService.Heartbeat:Connect(function()
        local mob = getClosestMob()
        if mob and mob:FindFirstChild("HumanoidRootPart") and autoFarm then
            humanoidRootPart.Anchored = false
            
            orbitAngle = orbitAngle + 2.5
            if orbitAngle >= 360 then orbitAngle = 0 end
            
            local angle = math.rad(orbitAngle)
            local x = math.cos(angle) * orbitRadius
            local z = math.sin(angle) * orbitRadius
            
            local mobPosition = mob.HumanoidRootPart.Position
            local targetPosition = mobPosition + Vector3.new(x, heightOffset, z)
            
            local lookAtPosition = mobPosition
            humanoidRootPart.CFrame = CFrame.new(targetPosition, lookAtPosition)
            
            humanoidRootPart.Anchored = true
        end
    end)
end

local function stopAutoFarm()
    autoFarm = false
    humanoidRootPart.Anchored = false
    if orbitConnection then orbitConnection:Disconnect() end
end

local function enableNoFall()
    runService.Stepped:Connect(function()
        if autoFarm and humanoidRootPart then
            humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end)
end

local abilityActive = false
local abilityLoop = nil
local function toggleAbility(isEnabled)
    abilityActive = isEnabled
    if isEnabled then
        if not abilityLoop then
            abilityLoop = spawn(function()
                while abilityActive do
                    useSkill("FlurryOfBlows")
                    useSkill("BloodyCut")
                    useSkill("Invisibility")
                    task.wait(1)
                end
            end)
        end
    else
        abilityActive = false
        abilityLoop = nil
    end
end

createGui = function()
    if gui then 
        gui:Destroy() 
    end
    
    local ScreenGui = Instance.new("ScreenGui")
    local MainFrame = Instance.new("Frame")
    local ImageLabel = Instance.new("ImageLabel")
    local CloseButton = Instance.new("TextButton")
    local ButtonContainer = Instance.new("Frame")
    local HeaderLabel = Instance.new("TextLabel")
    
    ScreenGui.Name = "AutoFarmGUI"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.DisplayOrder = 999999999
    ScreenGui.Parent = game.Players.LocalPlayer.PlayerGui
    
    CloseButton.Size = UDim2.new(0, 150, 0, 45)
    CloseButton.Position = UDim2.new(0.5, -75, 0, -40)
    CloseButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    CloseButton.BackgroundTransparency = 0.3
    CloseButton.Text = "Open/Close"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Font = Enum.Font.GothamBlack
    CloseButton.TextSize = 16
    CloseButton.Parent = ScreenGui
    CloseButton.ZIndex = 10
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0.3, 0)
    closeCorner.Parent = CloseButton
    
    local closeStroke = Instance.new("UIStroke")
    closeStroke.Color = Color3.fromRGB(255, 255, 255)
    closeStroke.Transparency = 0.8
    closeStroke.Thickness = 1
    closeStroke.Parent = CloseButton
    
    MainFrame.Size = UDim2.new(0.25, 0, 0.6, 0)
    MainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    MainFrame.BackgroundTransparency = 0.5
    MainFrame.BorderSizePixel = 0
    MainFrame.ClipsDescendants = true
    MainFrame.Visible = true
    MainFrame.ZIndex = 1
    MainFrame.Parent = ScreenGui
    
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = Color3.fromRGB(255, 255, 255)
    uiStroke.Thickness = 2
    uiStroke.Transparency = 0.5
    uiStroke.Parent = MainFrame
    
    ImageLabel.Size = UDim2.new(1, 0, 0.6, 0)
    ImageLabel.Position = UDim2.new(0, 0, 0, 0)
    ImageLabel.BackgroundTransparency = 1
    ImageLabel.Image = "rbxassetid://83971645462159"
    ImageLabel.ScaleType = Enum.ScaleType.Fit
    ImageLabel.ZIndex = 2
    ImageLabel.Parent = MainFrame
    
    HeaderLabel.Size = UDim2.new(1, 0, 0.1, 0)
    HeaderLabel.Position = UDim2.new(0, 0, 0, 0)
    HeaderLabel.BackgroundTransparency = 1
    HeaderLabel.Text = "Auto Farm Script"
    HeaderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    HeaderLabel.Font = Enum.Font.GothamBold
    HeaderLabel.TextSize = 24
    HeaderLabel.ZIndex = 3
    HeaderLabel.Parent = MainFrame
    
    ButtonContainer.Size = UDim2.new(1, 0, 0.45, 0)
    ButtonContainer.Position = UDim2.new(0, 0, 1, 0)
    ButtonContainer.AnchorPoint = Vector2.new(0, 1)
    ButtonContainer.BackgroundTransparency = 1
    ButtonContainer.Parent = MainFrame
    
    local mainFrameCorner = Instance.new("UICorner")
    mainFrameCorner.CornerRadius = UDim.new(0.05, 0)
    mainFrameCorner.Parent = MainFrame
    
    local UIGridLayout = Instance.new("UIGridLayout")
    UIGridLayout.Parent = ButtonContainer
    UIGridLayout.CellSize = UDim2.new(0.48, -1, 0.18, 0)
    UIGridLayout.CellPadding = UDim2.new(0, 2, 0, 2)
    UIGridLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIGridLayout.FillDirectionMaxCells = 2
    UIGridLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIGridLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
    
    makeDraggable(CloseButton)
    makeDraggable(MainFrame)
    
    local savedSettings = loadSettings()
    
    local function createToggleButton(number, name, onClick)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 1, 0)
        button.BackgroundTransparency = 0.1
        button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        button.Text = name
        button.TextColor3 = Color3.fromRGB(0, 0, 0)
        button.Font = Enum.Font.GothamBlack
        button.TextSize = 14
        button.LayoutOrder = number
        button.Parent = ButtonContainer
        button.ZIndex = 2
        
        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0.3, 0)
        corner.Parent = button
        
        local stroke = Instance.new("UIStroke")
        stroke.Color = Color3.fromRGB(255, 255, 255)
        stroke.Transparency = 0.9
        stroke.Thickness = 1
        stroke.Parent = button
        
        local isEnabled = savedSettings[name] or false
        
        local function updateButtonAppearance()
            if isEnabled then
                button.BackgroundColor3 = Color3.fromRGB(86, 71, 201)
                button.TextColor3 = Color3.fromRGB(255, 255, 255)
                stroke.Transparency = 0.7
            else
                button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                button.TextColor3 = Color3.fromRGB(0, 0, 0)
                stroke.Transparency = 0.9
            end
        end
        
        updateButtonAppearance()
        
        if isEnabled then
            onClick(true)
        end
        
        button.MouseButton1Click:Connect(function()
            isEnabled = not isEnabled
            updateButtonAppearance()
            onClick(isEnabled)
            savedSettings[name] = isEnabled
            saveSettings(savedSettings)
        end)
    end
    
    createToggleButton(1, "Auto Farm", function(enabled) 
        autoFarm = enabled
        if enabled then
            equipWeapon()
            startOrbiting()
            spawn(attackLoop)
        else
            stopAutoFarm()
        end
    end)
    
    createToggleButton(2, "Auto Attack", function(enabled) 
        if enabled then
            spawn(function()
                while enabled do
                    attackEnemy()
                    task.wait(0.1)
                end
            end)
        end
    end)
    
    createToggleButton(3, "Auto Ability", toggleAbility)
    
    createToggleButton(4, "No Fall Damage", function(enabled)
        if enabled and not noFallConnection then
            enableNoFall()
        end
    end)
    
    createToggleButton(5, "Weapon Equip", function(enabled)
        if enabled then
            equipWeapon()
        end
    end)
    
    CloseButton.MouseButton1Click:Connect(function()
        MainFrame.Visible = not MainFrame.Visible
    end)
    
    gui = ScreenGui
    mainFrame = MainFrame
    closeButton = CloseButton
    
    return ScreenGui, MainFrame, CloseButton
end

createGui()
enableNoFall()

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    
    if autoFarm then
        startOrbiting()
        spawn(attackLoop)
    end
end)
