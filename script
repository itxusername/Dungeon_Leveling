local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
local runService = game:GetService("RunService")
local userInput = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local autoFarm = true
local HIT_RANGE = 10
local orbitRadius = 10
local orbitAngle = 0
local heightOffset = 2.5  -- Changed from -0.5 to 2.5

local function isArcher(mob)
    return mob.Name:lower():find("archer") ~= nil 
end

local function getClosestMob()
    local closestMob = nil
    local closestDistance = math.huge
    for _, mob in ipairs(workspace.Characters:GetChildren()) do
        if mob:IsA("Model") and mob ~= character and mob:FindFirstChild("HumanoidRootPart") then
            local dist = (mob.HumanoidRootPart.Position - humanoidRootPart.Position).Magnitude
            if dist < closestDistance then
                closestDistance = dist
                closestMob = mob
            end
        end
    end
    return closestMob
end

local function isInRange(mob, range)
    local mobRootPart = mob:FindFirstChild("HumanoidRootPart")
    if not mobRootPart or not humanoidRootPart then return false end
    return (mobRootPart.Position - humanoidRootPart.Position).Magnitude <= range
end

local function equipWeapon()
    local args = {
        [1] = "Equip/UnEquip"
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("WeaponsEvent"):FireServer(unpack(args))
end

equipWeapon()

local function useSkill(skillName)
    local args = {
        [1] = { ["Skill"] = skillName, ["Function"] = "Activate" },
        [2] = humanoidRootPart.Position,
        [3] = true
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Skill"):FireServer(unpack(args))
end

local function attack()
    while autoFarm do
        local mob = getClosestMob()
        if mob and mob:FindFirstChild("HumanoidRootPart") then
            -- Set anchored to false before teleporting
            humanoidRootPart.Anchored = false
            
            orbitAngle = orbitAngle + 45  -- Larger increment for less frequent updates
            if orbitAngle >= 360 then orbitAngle = 0 end
            
            local angle = math.rad(orbitAngle)
            local x = math.cos(angle) * orbitRadius
            local z = math.sin(angle) * orbitRadius
            
            local mobPosition = mob.HumanoidRootPart.Position
            local targetPosition = mobPosition + Vector3.new(x, heightOffset, z)
            
            -- Directly teleport to position
            local lookAtPosition = mobPosition + Vector3.new(0, 1, 0)
            humanoidRootPart.CFrame = CFrame.new(targetPosition, lookAtPosition)
            
            -- Set anchored to true after teleporting
            humanoidRootPart.Anchored = true
            
            game:GetService("ReplicatedStorage"):WaitForChild("Events"):WaitForChild("Combat")
                :FireServer("Attack")
            useSkill("FlurryOfBlows")
            useSkill("BloodyCut")
            useSkill("Invisibility")
            
            -- Wait 1 second before teleporting again
            task.wait(1)
        else
            task.wait(0.5)
        end
    end
end

-- Changed the orbit function to use a timer instead of Heartbeat
local function startOrbiting()
    -- Remove previous connection if exists
    if connection then connection:Disconnect() end
    
    -- Start a new loop that teleports every 1 second
    task.spawn(function()
        while autoFarm do
            local mob = getClosestMob()
            if mob and mob:FindFirstChild("HumanoidRootPart") then
                -- Set anchored to false before teleporting
                humanoidRootPart.Anchored = false
                
                orbitAngle = orbitAngle + 45  -- Move in larger increments
                if orbitAngle >= 360 then orbitAngle = 0 end
                
                local angle = math.rad(orbitAngle)
                local x = math.cos(angle) * orbitRadius
                local z = math.sin(angle) * orbitRadius
                
                local mobPosition = mob.HumanoidRootPart.Position
                local targetPosition = mobPosition + Vector3.new(x, heightOffset, z)
                
                -- Directly teleport to position
                local lookAtPosition = mobPosition + Vector3.new(0, 1, 0)
                humanoidRootPart.CFrame = CFrame.new(targetPosition, lookAtPosition)
                
                -- Set anchored to true after teleporting
                humanoidRootPart.Anchored = true
            end
            
            -- Wait exactly 1 second before next teleport
            task.wait(1)
        end
    end)
end

local function stopAutoFarm()
    autoFarm = false
    humanoidRootPart.Anchored = false
    if connection then connection:Disconnect() end
end

local function enableNoFall()
    runService.Stepped:Connect(function()
        if autoFarm and humanoidRootPart then
            humanoidRootPart.Velocity = Vector3.new(0, 0, 0)
        end
    end)
end

enableNoFall()
startOrbiting()
attack()
